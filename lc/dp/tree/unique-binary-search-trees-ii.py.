# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def generateTrees(self, n: int) -> List[Optional[TreeNode]]:
        # dp on tree

        @cache
        def dp(l, r):
            if l == r: return [TreeNode(l)]
            if l > r: return [None]
            res = []
            for val in range(l, r+1):
                for left in dp(l, val-1):
                    for right in dp(val+1, r):
                        root = TreeNode(val, left, right)
                        res.append(root)
            return res

        return dp(1, n)
